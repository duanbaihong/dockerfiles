#/bin/sh

function printOK() {
  if [ $1 -ne 0 ]; then
    echo -e "[\033[33mFailed\033[0m]"
  else
    echo -e "[\033[32m  OK  \033[0m]"
  fi
}
function formatOutput() {
  width=110
  str=""
  arg=$1
  if [ "$arg" == "title" ]; then
    for i in `seq 1 $(expr $width + 8)`
    do
      str="${str}#"
    done
    echo $str
    return 0
  fi
  reparg=`echo $arg|sed 's|\\\033\[[0-9]*m||g'`
  if [ -n "$2" ]; then
    reparg2=`echo $2|sed 's|\\\033\[[0-9]*m||g'`
    argLen=$(expr ${width} - ${#reparg} - ${#reparg2} + 6)
    tab=""
    for b in `seq 1 ${argLen}`
    do
      tab="$tab "
    done
    echo -e "\033[36m$1$tab$2\033[0m"
    return 0
  else
    argLen=$(expr ${width} - ${#reparg})
    tab=""
    for b in `seq 1 ${argLen}`
    do
      tab="$tab "
    done
    echo -en "$arg$tab"
  fi
}

function init_start_arg(){
  REDIS_CONFIG="${REDIS_PREFIX}/etc/redis.conf --daemonize no --dir ${REDIS_PREFIX}/data --loglevel ${REDIS_LOGLEVEL}"
  formatOutput "Initial REDIS configuration file [\033[31m${REDIS_TYPE}.conf\033[0m]..."
  if [ "$REDIS_TYPE" == 'server' ]; then
    if [ ! -f "${REDIS_PREFIX}/etc/redis.conf" ]; then
      IP_DEVICE=$(ip route | grep default|awk '{print $5}')
      REDIS_ADDR=$(ip -o -4 addr list ${IP_DEVICE} | head -n1 | awk '{print $4}' | cut -d/ -f1)
      cp ${REDIS_PREFIX}/example/redis.conf ${REDIS_PREFIX}/etc/redis.conf -rf
      sed -i 's|appendonly no|appendonly yes|g' ${REDIS_PREFIX}/etc/redis.conf
      sed -i "s|bind 127.0.0.1|bind ${REDIS_ADDR}|g" ${REDIS_PREFIX}/etc/redis.conf
    fi
  fi
  if [ "$REDIS_TYPE" == 'sentinel' ]; then
    if [ ! -f "${REDIS_PREFIX}/etc/sentinel.conf" ]; then
      cp ${REDIS_PREFIX}/example/sentinel.conf ${REDIS_PREFIX}/etc/sentinel.conf -rf
    fi
    REDIS_CONFIG="${REDIS_PREFIX}/etc/sentinel.conf --daemonize no --sentinel --dir ${REDIS_PREFIX}/data --loglevel ${REDIS_LOGLEVEL}"
  fi
  printOK $?;
}
function init_redis_user_permission(){
  id $REDIS_USER >& /dev/null;
  if [ $? -ne 0 ]; then
    formatOutput title;
    formatOutput "Generate REDIS running user [${REDIS_USER}]..."
    adduser -D -h ${REDIS_PREFIX}  -s /sbin/nologin -u ${REDIS_USER_UID} ${REDIS_USER} >& /dev/null;
    printOK $?;
    formatOutput "Repair user directory permissions...."
    chown ${REDIS_USER}.${REDIS_USER} ${REDIS_PREFIX} -R
    printOK $?
  fi
}

